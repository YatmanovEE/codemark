{"version":3,"sources":["components/Search/Search.slice.ts","redux/hooks.ts","components/Notice/Notice.slice.ts","components/Notice/Notice.tsx","components/ShowCase/ShowCase.slice.ts","components/Nav/Nav.slice.ts","components/ShowCase/showCaseApi.ts","components/Nav/Nav.tsx","components/Search/Search.tsx","components/ShowCase/ShowCaseList.tsx","components/ShowCase/ShowCase.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","timeoutNotes","notes","dispatch","addNotes","setTimeout","clearNotes","noticeSlice","createSlice","name","initialState","reducers","state","action","payload","selectNote","notice","actions","Notice","note","ref","useRef","CSSTransition","unmountOnExit","in","timeout","classNames","nodeRef","className","searchSlice","value","disabled","error","setValue","clearValue","createError","clearError","setDisabled","searchSelectors","searchValue","fetchShowCase","createAsyncThunk","thunkApi","a","url","fetch","response","status","rejectWithValue","message","json","data","fixed_height_downsampled_url","date","Date","now","fetchImage","src","window","URL","blob","photoSrc","createObjectURL","loading","showCaseSlice","showCaseList","pendingItem","updateLoading","clearShowCaseList","extraReducers","builder","addCase","fulfilled","getter","pending","push","rejected","index","findIndex","val","showCaseSelectors","showCase","navSlice","selector","switchSelector","navSelectors","nav","API","fetchTag","Nav","useState","timerActive","setTimerActive","useEffect","timer","setInterval","clearInterval","selectSelector","onClick","Search","rootState","match","type","onChange","e","currentTarget","length","split","forEach","tagName","count","sortObj","arr","list","i","sort","b","ShowCaseList","selectShowCaseList","keysList","Object","keys","values","map","itemImage","keyItemImage","alt","keysListItem","keyShowCase","ShowCase","selectLoading","App","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a20fde41.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport ISearch from \"./interfaces\";\r\n\r\nconst initialState: ISearch.IState = {\r\n\tvalue: \"\",\r\n\tdisabled: true,\r\n\terror: \"\",\r\n};\r\n\r\nconst searchSlice = createSlice({\r\n\tname: \"search\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetValue(state, action: PayloadAction<Pick<ISearch.IState, \"value\">>) {\r\n\t\t\tstate.value = action.payload.value;\r\n\t\t},\r\n\t\tclearValue(state) {\r\n\t\t\tstate.value = \"\";\r\n\t\t},\r\n\t\tcreateError(state, action: PayloadAction<Pick<ISearch.IState, \"error\">>) {\r\n\t\t\tstate.error = action.payload.error;\r\n\t\t\tstate.disabled = true;\r\n\t\t},\r\n\t\tclearError(state) {\r\n\t\t\tstate.error = \"\";\r\n\t\t\tstate.disabled = false;\r\n\t\t},\r\n\t\tsetDisabled(\r\n\t\t\tstate,\r\n\t\t\taction: PayloadAction<Pick<ISearch.IState, \"disabled\">>\r\n\t\t) {\r\n\t\t\tstate.disabled = action.payload.disabled;\r\n\t\t},\r\n\t},\r\n});\r\nexport namespace searchSelectors {\r\n\texport const selectValue = (state: RootState) => state.searchValue.value;\r\n\texport const selectError = (state: RootState) => state.searchValue.error;\r\n}\r\n\r\nexport const { setValue, clearValue, createError, clearError, setDisabled } =\r\n\tsearchSlice.actions;\r\n\r\nexport default searchSlice.reducer;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"./store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport INotice from \"./interfaces\";\r\n\r\nconst initialState: INotice.IState = {\r\n\tnotes: \"\",\r\n};\r\n\r\nexport const timeoutNotes = ({ notes }: INotice.IState) => {\r\n\treturn (dispatch: any) => {\r\n\t\tdispatch(\r\n\t\t\taddNotes({\r\n\t\t\t\tnotes,\r\n\t\t\t})\r\n\t\t);\r\n\t\tsetTimeout(() => {\r\n\t\t\tdispatch(clearNotes());\r\n\t\t}, 2000);\r\n\t};\r\n};\r\n\r\nconst noticeSlice = createSlice({\r\n\tname: \"Notice\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\tclearNotes(state) {\r\n\t\t\tstate.notes = \"\";\r\n\t\t},\r\n\t\taddNotes(state, action: PayloadAction<INotice.IState>) {\r\n\t\t\tstate.notes = action.payload.notes;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const selectNote = (state: RootState) => state.notice.notes;\r\nexport const { clearNotes, addNotes } = noticeSlice.actions;\r\n\r\nexport default noticeSlice.reducer;\r\n","import { FC, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useAppSelector } from \"../../redux/hooks\";\r\nimport { selectNote } from \"./Notice.slice\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./Notice.style.css\";\r\nexport const Notice: FC = () => {\r\n\tconst note = useAppSelector(selectNote);\r\n\tconst ref = useRef(null);\r\n\r\n\treturn (\r\n\t\t<CSSTransition\r\n\t\t\tunmountOnExit\r\n\t\t\tin={!!note}\r\n\t\t\ttimeout={200}\r\n\t\t\tclassNames=\"notice_wrapper\"\r\n\t\t\tnodeRef={ref}\r\n\t\t>\r\n\t\t\t<div className=\"wrapper notice_wrapper\" ref={ref}>\r\n\t\t\t\t<span>{note}</span>\r\n\t\t\t</div>\r\n\t\t</CSSTransition>\r\n\t);\r\n};\r\n","import { timeoutNotes } from \"./../Notice/Notice.slice\";\r\nimport { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport { addNotes } from \"../Notice/Notice.slice\";\r\nimport IShowCase from \"./interfaces\";\r\n\r\nconst initialState: IShowCase.IState = {\r\n\tshowCaseList: {},\r\n\tpendingItem: {\r\n\t\tdate: 0,\r\n\t\tname: \"\",\r\n\t\tphotoSrc: \"\",\r\n\t\tloading: false,\r\n\t},\r\n\tloading: false,\r\n};\r\n\r\nexport const fetchShowCase = createAsyncThunk(\r\n\t\"ShowCase/fetchShowCase\",\r\n\tasync ({ url, name }: IShowCase.IFetchProps, thunkApi) => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url);\r\n\t\t\tif (response.status !== 200) {\r\n\t\t\t\tthunkApi.dispatch(\r\n\t\t\t\t\ttimeoutNotes({ notes: `Сервер ответил ошибкой: ${response.status}` })\r\n\t\t\t\t);\r\n\t\t\t\treturn thunkApi.rejectWithValue({\r\n\t\t\t\t\tmessage: response.status,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tconst json = await response.json();\r\n\t\t\tconst data: string = await json.data.fixed_height_downsampled_url;\r\n\t\t\tlet date = Date.now();\r\n\t\t\tthunkApi.dispatch(\r\n\t\t\t\tfetchImage({\r\n\t\t\t\t\tname,\r\n\t\t\t\t\tdate,\r\n\t\t\t\t\tsrc: data,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\treturn { data, name, date };\r\n\t\t} catch (e) {\r\n\t\t\tthunkApi.dispatch(timeoutNotes({ notes: `Произошла ошибка на сервере` }));\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const fetchImage = createAsyncThunk(\r\n\t\"ShowCase/fetchImage\",\r\n\tasync (\r\n\t\t{\r\n\t\t\tname,\r\n\t\t\tdate,\r\n\t\t\tsrc,\r\n\t\t}: {\r\n\t\t\tname: string;\r\n\t\t\tdate: number;\r\n\t\t\tsrc: string;\r\n\t\t},\r\n\t\tthunkApi\r\n\t) => {\r\n\t\ttry {\r\n\t\t\tlet url = window.URL;\r\n\t\t\tlet data = await fetch(src);\r\n\t\t\tlet blob = await data.blob();\r\n\t\t\treturn {\r\n\t\t\t\tphotoSrc: url.createObjectURL(blob),\r\n\t\t\t\tdate,\r\n\t\t\t\tname,\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\t\t} catch (e) {\r\n\t\t\tthunkApi.dispatch(\r\n\t\t\t\ttimeoutNotes({ notes: `Похоже что картинку не удалось загрузить` })\r\n\t\t\t);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n);\r\n\r\nconst showCaseSlice = createSlice({\r\n\tname: \"ShowCase\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\tupdateLoading(state) {\r\n\t\t\tstate.loading = !state.loading;\r\n\t\t},\r\n\t\tclearShowCaseList(state) {\r\n\t\t\tstate.showCaseList = {};\r\n\t\t},\r\n\t},\r\n\textraReducers: (builder) => {\r\n\t\tbuilder.addCase(fetchShowCase.fulfilled, (state, action) => {\r\n\t\t\tstate.loading = false;\r\n\t\t\tlet getter = state.showCaseList[action.payload.name] ?? [];\r\n\t\t\tlet date = action.payload.date;\r\n\t\t\tlet pending: IShowCase.showItem = (state.pendingItem = {\r\n\t\t\t\tphotoSrc: \"\",\r\n\t\t\t\tdate: date,\r\n\t\t\t\tname: action.payload.name,\r\n\t\t\t\tloading: true,\r\n\t\t\t});\r\n\t\t\tgetter.push(pending);\r\n\r\n\t\t\tstate.showCaseList[action.payload.name] = getter;\r\n\t\t});\r\n\t\tbuilder.addCase(fetchShowCase.pending, (state) => {\r\n\t\t\tstate.loading = true;\r\n\t\t});\r\n\t\tbuilder.addCase(fetchShowCase.rejected, (state) => {\r\n\t\t\tstate.loading = false;\r\n\t\t});\r\n\t\tbuilder.addCase(fetchImage.fulfilled, (state, action) => {\r\n\t\t\tlet index = state.showCaseList[action.payload.name].findIndex(\r\n\t\t\t\t(val) => val.date === action.payload.date\r\n\t\t\t);\r\n\t\t\tstate.showCaseList[action.payload.name][index] = {\r\n\t\t\t\t...state.showCaseList[action.payload.name][index],\r\n\t\t\t\tloading: false,\r\n\t\t\t\tphotoSrc: action.payload.photoSrc,\r\n\t\t\t};\r\n\t\t});\r\n\t},\r\n});\r\n\r\nexport namespace showCaseSelectors {\r\n\texport const selectLoading = (state: RootState) => state.showCase.loading;\r\n\texport const selectShowCaseList = (state: RootState) =>\r\n\t\tstate.showCase.showCaseList;\r\n}\r\n\r\nexport const { updateLoading, clearShowCaseList } = showCaseSlice.actions;\r\n\r\nexport default showCaseSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport INav from \"./interface\";\r\n\r\nconst initialState: INav.IState = {\r\n\tselector: false,\r\n};\r\n\r\nconst navSlice = createSlice({\r\n\tname: \"Nav\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\tswitchSelector(state) {\r\n\t\t\tstate.selector = !state.selector;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport namespace navSelectors {\r\n\texport const selectSelector = (state: RootState) => state.nav.selector;\r\n}\r\n\r\nexport const { switchSelector } = navSlice.actions;\r\n\r\nexport default navSlice.reducer;\r\n","const API = {\r\n\tfetchTag:\r\n\t\t\"https://api.giphy.com/v1/gifs/random?api_key=lSnIkZHr8odpiZjOQLVvJRrbmME8jytG\",\r\n};\r\n\r\nexport default API;\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport { timeoutNotes } from \"../Notice/Notice.slice\";\r\nimport { clearValue } from \"../Search/Search.slice\";\r\nimport { clearShowCaseList, fetchShowCase } from \"../ShowCase/ShowCase.slice\";\r\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\r\nimport { navSelectors, switchSelector } from \"./Nav.slice\";\r\nimport API from \"../ShowCase/showCaseApi\";\r\n\r\nexport const Nav: FC = () => {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst [timerActive, setTimerActive] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet timer = setInterval(() => {\r\n\t\t\tdispatch(\r\n\t\t\t\tfetchShowCase({\r\n\t\t\t\t\tname: \"random\",\r\n\t\t\t\t\turl: `${API.fetchTag}&tag=random`,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}, 500);\r\n\t\tif (!timerActive) clearInterval(timer);\r\n\t\treturn () => {\r\n\t\t\tclearInterval(timer);\r\n\t\t};\r\n\t}, [dispatch, timerActive]);\r\n\r\n\tconst selector = useAppSelector(navSelectors.selectSelector);\r\n\treturn (\r\n\t\t<div className=\"wrapper nav_wrapper\">\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"btn btn_showCase btn__secondary\"\r\n\t\t\t\tonClick={() => dispatch(switchSelector())}\r\n\t\t\t>\r\n\t\t\t\t{selector ? \"Группировать\" : \"Разгрупировать\"}\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"btn btn_showCase btn__secondary\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tdispatch(clearValue());\r\n\t\t\t\t\tdispatch(clearShowCaseList());\r\n\t\t\t\t\tdispatch(timeoutNotes({ notes: \"Список очищен\" }));\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tОчистить\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"btn btn_showCase btn__secondary\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsetTimerActive(!timerActive);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tdelay\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { FC, ReactEventHandler, useEffect } from \"react\";\r\nimport { useAppDispatch } from \"../../redux/hooks\";\r\nimport { fetchShowCase } from \"../ShowCase/ShowCase.slice\";\r\nimport { setValue, clearError, createError, setDisabled } from \"./Search.slice\";\r\nimport API from \"../ShowCase/showCaseApi\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/store\";\r\nimport \"./Search.style.css\";\r\n\r\nexport const Search: FC = () => {\r\n\tconst { error, value, disabled } = useSelector((rootState: RootState) => {\r\n\t\treturn rootState.searchValue;\r\n\t});\r\n\r\n\tconst dispatch = useAppDispatch();\r\n\tconst inputHandler: ReactEventHandler<HTMLInputElement> = (e) => {\r\n\t\tdispatch(setValue({ value: e.currentTarget.value }));\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (value.match(/[^A-Za-z,]/)) {\r\n\t\t\tdispatch(\r\n\t\t\t\tcreateError({\r\n\t\t\t\t\terror: \"Допустимы только английские буквы и запятая\",\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t} else if (value === \",\") {\r\n\t\t\tdispatch(\r\n\t\t\t\tcreateError({\r\n\t\t\t\t\terror: \"Нельзя отправлять только запятую\",\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t} else if (value === \"\") {\r\n\t\t\tdispatch(\r\n\t\t\t\tsetDisabled({\r\n\t\t\t\t\tdisabled: true,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t} else dispatch(clearError());\r\n\t}, [dispatch, value]);\r\n\r\n\tconst searchHandler: ReactEventHandler<HTMLButtonElement> = (e) => {\r\n\t\tif (value.length === 0) {\r\n\t\t\tdispatch(\r\n\t\t\t\tcreateError({\r\n\t\t\t\t\terror: \"Пустая строка\",\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (!error) {\r\n\t\t\tvalue.split(\",\").forEach((tagName, count) => {\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tfetchShowCase({\r\n\t\t\t\t\t\tname: tagName,\r\n\t\t\t\t\t\turl: `${API.fetchTag}&tag=${tagName}`,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"search\">\r\n\t\t\t<div className=\"wrapper search_wrapper\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName={`search_input input ${error && \"input__error\"}`}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={inputHandler}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t<span className=\"error search_error\">{error}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"btn search_btn btn__primary\"\r\n\t\t\t\tonClick={searchHandler}\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t>\r\n\t\t\t\tПоиск\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { FC } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\r\nimport { navSelectors } from \"../Nav/Nav.slice\";\r\nimport { setValue } from \"../Search/Search.slice\";\r\nimport { showCaseSelectors } from \"./ShowCase.slice\";\r\nimport \"./ShowCaseList.style.css\";\r\n\r\ntype ISortObj<T> = (arr: T[][]) => T[];\r\n\r\nconst sortObj: ISortObj<{ date: number; photoSrc: string; name: string }> = (\r\n\tarr\r\n) => {\r\n\tlet list: { date: number; photoSrc: string; name: string }[] = [];\r\n\tfor (let i = 0; i < arr.length; i++) {\r\n\t\tlist.push(...arr[i]);\r\n\t}\r\n\treturn list.sort((a, b) => a.date - b.date);\r\n};\r\n\r\nexport const ShowCaseList: FC = () => {\r\n\tconst showCase = useAppSelector(showCaseSelectors.selectShowCaseList);\r\n\tconst selector = useAppSelector(navSelectors.selectSelector);\r\n\tconst dispatch = useAppDispatch();\r\n\tconst keysList = Object.keys(showCase);\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t{keysList.length > 0 ? (\r\n\t\t\t\tselector ? (\r\n\t\t\t\t\tsortObj(Object.values(showCase)).map((itemImage, keyItemImage) => (\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\t\tsetValue({\r\n\t\t\t\t\t\t\t\t\t\tvalue: itemImage.name,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsrc={itemImage.photoSrc}\r\n\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\tkey={itemImage.date + keyItemImage}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t\t) : (\r\n\t\t\t\t\tkeysList.map((keysListItem, keyShowCase) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={keyShowCase + keysListItem}>\r\n\t\t\t\t\t\t\t\t<h4>{keysListItem}</h4>\r\n\t\t\t\t\t\t\t\t<div className=\"wrapper showCaseList_wrapper\">\r\n\t\t\t\t\t\t\t\t\t{showCase[keysListItem].map((itemImage, keyItemImage) => {\r\n\t\t\t\t\t\t\t\t\t\treturn !itemImage.loading ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetValue({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: itemImage.name,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={itemImage.photoSrc}\r\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={itemImage.date + keyItemImage}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"loader loader_image\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={keyItemImage + \"loader\"}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"lds-circle\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t) : (\r\n\t\t\t\t<span>Список пуст</span>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { FC } from \"react\";\r\nimport { useAppSelector } from \"../../redux/hooks\";\r\nimport { Nav } from \"../Nav/Nav\";\r\nimport { Search } from \"../Search/Search\";\r\nimport { showCaseSelectors } from \"./ShowCase.slice\";\r\nimport { ShowCaseList } from \"./ShowCaseList\";\r\nimport \"./ShowCase.style.css\";\r\n\r\nconst ShowCase: FC = () => {\r\n\tconst loading = useAppSelector(showCaseSelectors.selectLoading);\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"flex\">\r\n\t\t\t\t<Nav />\r\n\t\t\t\t<Search />\r\n\t\t\t</div>\r\n\t\t\t<ShowCaseList />\r\n\t\t\t{loading && \"Загружается что-то объемное, подождите!)\"}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ShowCase;\r\n","import { Notice } from \"./components/Notice/Notice\";\r\nimport ShowCase from \"./components/ShowCase/ShowCase\";\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Notice />\r\n\t\t\t<ShowCase />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\r\nimport showCase from \"../components/ShowCase/ShowCase.slice\";\r\nimport notice from \"../components/Notice/Notice.slice\";\r\nimport searchValue from \"../components/Search/Search.slice\";\r\nimport nav from \"../components/Nav/Nav.slice\";\r\n\r\nexport const store = configureStore({\r\n\treducer: {\r\n\t\tshowCase,\r\n\t\tnotice,\r\n\t\tsearchValue,\r\n\t\tnav,\r\n\t},\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n\tReturnType,\r\n\tRootState,\r\n\tunknown,\r\n\tAction<string>\r\n>;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport { store } from \"./redux/store\";\r\nimport \"./index.style.css\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}